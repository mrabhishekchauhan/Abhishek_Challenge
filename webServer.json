{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS CloudFormation Template VPC_with_PublicIPs_And_DNS: Template to create a VPC with a public subnet, an internet gateway, a route table, and a security group allowing HTTP and HTTPS access over a web server",
    "Parameters": {
      "KeyPair": {
        "Description": "Name of the keypair to use for SSH access",
        "Type": "String"
      }
    },
    "Resources": {
      "VPC": {
        "Type": "AWS::EC2::VPC",
        "Properties": {
          "EnableDnsSupport": "true",
          "EnableDnsHostnames": "true",
          "CidrBlock": "10.0.0.0/16"
        }
      },
      "PublicSubnet": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "CidrBlock": "10.0.0.0/24"
        }
      },
      "InternetGateway": {
        "Type": "AWS::EC2::InternetGateway"
      },
      "VPCGatewayAttachment": {
        "Type": "AWS::EC2::VPCGatewayAttachment",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "InternetGatewayId": {
            "Ref": "InternetGateway"
          }
        }
      },
      "PublicRouteTable": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          }
        }
      },
      "PublicRoute": {
        "Type": "AWS::EC2::Route",
        "DependsOn": "VPCGatewayAttachment",
        "Properties": {
          "RouteTableId": {
            "Ref": "PublicRouteTable"
          },
          "DestinationCidrBlock": "0.0.0.0/0",
          "GatewayId": {
            "Ref": "InternetGateway"
          }
        }
      },
      "PublicSubnetRouteTableAssociation": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "PublicSubnet"
          },
          "RouteTableId": {
            "Ref": "PublicRouteTable"
          }
        }
      },
      "PublicSubnetNetworkAclAssociation": {
        "Type": "AWS::EC2::SubnetNetworkAclAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "PublicSubnet"
          },
          "NetworkAclId": {
            "Fn::GetAtt": ["VPC", "DefaultNetworkAcl"]
          }
        }
      },
      "WebServerSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Enable HTTP and HTTPS ingress",
          "VpcId": {
            "Ref": "VPC"
          },
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": "80",
              "ToPort": "80",
              "CidrIp": "0.0.0.0/0"
            },
            {
              "IpProtocol": "tcp",
              "FromPort": "443",
              "ToPort": "443",
              "CidrIp": "0.0.0.0/0"
            },  
            {
              "IpProtocol": "tcp",
              "FromPort": "22",
              "ToPort": "22",
              "CidrIp": "0.0.0.0/0"
            }
          ]
        }
      },
      "WebServerInstance": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "InstanceType": "t2.micro",
          "ImageId": "ami-8c1be5f6",
          "NetworkInterfaces": [
            {
              "GroupSet": [
                {
                  "Ref": "WebServerSecurityGroup"
                }
              ],
              "AssociatePublicIpAddress": "true",
              "DeviceIndex": "0",
              "DeleteOnTermination": "true",
              "SubnetId": {
                "Ref": "PublicSubnet"
              }
            }
          ],
          "KeyName": {
            "Ref": "KeyPair"
          },
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [
                "\n",
                [
                  "#!/bin/bash -xe",
                  "sudo yum update -y",
                  "sudo yum install mod_ssl httpd -y",
                  "echo \"<html><head><title>Hello World</title></head><body><h1>Hello World!</h1></body></html>\" > /var/www/html/index.html",
                  "sudo /etc/init.d/httpd start",
                  "cd /etc/pki/tls/certs",
                  "sudo ./make-dummy-cert localhost.crt",
                  "sudo sed -i '/SSLCertificateKeyFile/s/^/# /' /etc/httpd/conf.d/ssl.conf",
                  "sudo /etc/init.d/httpd restart",
                  "sudo bash -c 'cat << EOF > /etc/httpd/conf.d/redirect.conf\n",
                  "RewriteEngine On\n",
                  "RewriteCond %{HTTPS} off\n", 
                  "RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [R,L]\n",
                  "EOF\n'\n",
                  "sudo /etc/init.d/httpd restart",
                  "sudo chkconfig --list httpd",
                  "curl -Is http://localhost | head -n 1" ,
                  "curl -k https://localhost",
                  "curl -k http://localhost | grep -q 'Location: https://'",
                  "ls -l /var/www/html/index.html"
                ]
              ]
            }
          }
        }
      }
    },
    "Outputs": {
      "URL": {
        "Description": "URL of the sample website",
        "Value": {
          "Fn::Join": [
            "",
            [
              "https://",
              {
                "Fn::GetAtt": ["WebServerInstance", "PublicDnsName"]
              }
            ]
          ]
        }
      }
    }
  }
  